version: '3.8'

services:
  libsql-server:
    image: ghcr.io/tursodatabase/libsql-server:latest
    container_name: libsql-server
    volumes:
      - ./data/sqlite/data.sqld/dbs/default/data:/var/lib/sqld/data.sqld/dbs/default/data:ro
      - ./data/sqlite/data.sqld/dbs/default/data-shm:/var/lib/sqld/data.sqld/dbs/default/data-shm:rw
      - ./data/sqlite/data.sqld/dbs/default/data-wal:/var/lib/sqld/data.sqld/dbs/default/data-wal:rw
    ports:
      - "8081:8081" # Expose port 8081 on the host machine
    environment:
      - SQLD_HTTP_LISTEN_ADDR=0.0.0.0:8081
    entrypoint: [ "sh", "-c", "sqld" ]
    restart: always

  go-core:
    image: ghcr.io/core-coin/go-core:latest
    container_name: go-core
    environment:
      - GO_CORE_FLAGS=${GO_CORE_FLAGS}
    ports:
      - "8546:8546" # WebSocket port
    networks:
      - core-network
    entrypoint: [ "sh", "-c", "gocore ${GO_CORE_FLAGS}" ]
    depends_on:
      - libsql-server
    restart: always

  core-etl:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: core-etl
    depends_on:
      - go-core
    volumes:
      - ./data/sqlite:/data
    networks:
      - core-network
    environment:
      - CORE_ETL_FLAGS=${CORE_ETL_FLAGS}
      - CORE_ETL_EXPORT_FLAGS=${CORE_ETL_EXPORT_FLAGS}
    entrypoint: [ "sh", "-c", "/usr/local/bin/core-etl ${CORE_ETL_FLAGS} export ${CORE_ETL_EXPORT_FLAGS}" ]
    restart: always

networks:
  core-network:
    driver: bridge
